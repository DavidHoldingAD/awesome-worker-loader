name: release

on:
  pull_request:
    branches:
      - master

env:
  buildOutputDir: dist
  archiveName: awesome-worker-loader.zip

jobs:
  build-and-zip:
    runs-on: ubuntu-latest

    steps:
      - id: checkout
        name: Checkout repository
        uses: actions/checkout@v2

      - id: bump-version
        name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          RELEASE_BRANCHES: master

      - id: install-packages
        name: Install packages
        run: npm install

      - id: compile-source
        name: Compile source
        run: npm run build -- -d ${{ env.buildOutputDir }}
        env:
          NODE_ENV: production
          CI: true

      - id: archive-files
        name: Archive files
        run: |
          zip ${{ env.archiveName }} ${{ env.buildOutputDir }}

      - id: upload-artifact
        name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.archiveName }}
          path: ${{ env.archiveName }}

  release-github:
    runs-on: ubuntu-latest
    needs: build-and-zip

    steps:
      - id: download-artifact
        name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.archiveName }}
          path: ${{ env.archiveName }}

      - id: get-commit-message
        name: Get commit message
        run: |
          echo ::set-env name=commitMessage::$(git log --format=%B -n 1 ${{ github.event.after }})

      - id: create-github-release
        name: Create Github Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ env.commitMessage }}

      - id: upload-release-asset
        name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-github-release.outputs.upload_url }}
          asset_path: ./${{ env.archiveName }}
          asset_name: ${{ env.archiveName }}
          asset_content_type: application/zip

  release-npm:
    runs-on: ubuntu-latest
    needs: build-and-zip

    steps:
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
